// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.15.8
// source: market/stall.proto

package market

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// StallServiceClient is the client API for StallService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StallServiceClient interface {
}

type stallServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStallServiceClient(cc grpc.ClientConnInterface) StallServiceClient {
	return &stallServiceClient{cc}
}

// StallServiceServer is the server API for StallService service.
// All implementations must embed UnimplementedStallServiceServer
// for forward compatibility
type StallServiceServer interface {
	mustEmbedUnimplementedStallServiceServer()
}

// UnimplementedStallServiceServer must be embedded to have forward compatible implementations.
type UnimplementedStallServiceServer struct {
}

func (UnimplementedStallServiceServer) mustEmbedUnimplementedStallServiceServer() {}

// UnsafeStallServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StallServiceServer will
// result in compilation errors.
type UnsafeStallServiceServer interface {
	mustEmbedUnimplementedStallServiceServer()
}

func RegisterStallServiceServer(s grpc.ServiceRegistrar, srv StallServiceServer) {
	s.RegisterService(&StallService_ServiceDesc, srv)
}

// StallService_ServiceDesc is the grpc.ServiceDesc for StallService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StallService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "market.StallService",
	HandlerType: (*StallServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "market/stall.proto",
}
