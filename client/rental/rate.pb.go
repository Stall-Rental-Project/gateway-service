// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        v3.21.8
// source: rental/rate.proto

package rental

import (
	common "gateway-service/client/common"
	market "gateway-service/client/market"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FeeType int32

const (
	FeeType_NSA_INITIAL_FEE      FeeType = 0
	FeeType_NSA_MONTHLY_FEE      FeeType = 1
	FeeType_NSA_SECURITY_FEE     FeeType = 2
	FeeType_NSA_TOTAL_AMOUNT_DUE FeeType = 3
)

// Enum value maps for FeeType.
var (
	FeeType_name = map[int32]string{
		0: "NSA_INITIAL_FEE",
		1: "NSA_MONTHLY_FEE",
		2: "NSA_SECURITY_FEE",
		3: "NSA_TOTAL_AMOUNT_DUE",
	}
	FeeType_value = map[string]int32{
		"NSA_INITIAL_FEE":      0,
		"NSA_MONTHLY_FEE":      1,
		"NSA_SECURITY_FEE":     2,
		"NSA_TOTAL_AMOUNT_DUE": 3,
	}
)

func (x FeeType) Enum() *FeeType {
	p := new(FeeType)
	*p = x
	return p
}

func (x FeeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeeType) Descriptor() protoreflect.EnumDescriptor {
	return file_rental_rate_proto_enumTypes[0].Descriptor()
}

func (FeeType) Type() protoreflect.EnumType {
	return &file_rental_rate_proto_enumTypes[0]
}

func (x FeeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeeType.Descriptor instead.
func (FeeType) EnumDescriptor() ([]byte, []int) {
	return file_rental_rate_proto_rawDescGZIP(), []int{0}
}

type Rate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RateId   string        `protobuf:"bytes,1,opt,name=rate_id,json=rateId,proto3" json:"rate_id"`
	RateCode string        `protobuf:"bytes,2,opt,name=rate_code,json=rateCode,proto3" json:"rate_code"`
	Status   common.Status `protobuf:"varint,3,opt,name=status,proto3,enum=common.Status" json:"status"`
	Type     RateType      `protobuf:"varint,4,opt,name=type,proto3,enum=rental.RateType" json:"type"`
	// only one of six next fields should be set
	OtherRate    *OtherRate         `protobuf:"bytes,5,opt,name=other_rate,json=otherRate,proto3" json:"other_rate"`
	RentalRate   *StallRentalRate   `protobuf:"bytes,6,opt,name=rental_rate,json=rentalRate,proto3" json:"rental_rate"`
	RightsRate   *StallRightsRate   `protobuf:"bytes,7,opt,name=rights_rate,json=rightsRate,proto3" json:"rights_rate"`
	SecurityBond *StallSecurityBond `protobuf:"bytes,8,opt,name=security_bond,json=securityBond,proto3" json:"security_bond"`
}

func (x *Rate) Reset() {
	*x = Rate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rental_rate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rate) ProtoMessage() {}

func (x *Rate) ProtoReflect() protoreflect.Message {
	mi := &file_rental_rate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rate.ProtoReflect.Descriptor instead.
func (*Rate) Descriptor() ([]byte, []int) {
	return file_rental_rate_proto_rawDescGZIP(), []int{0}
}

func (x *Rate) GetRateId() string {
	if x != nil {
		return x.RateId
	}
	return ""
}

func (x *Rate) GetRateCode() string {
	if x != nil {
		return x.RateCode
	}
	return ""
}

func (x *Rate) GetStatus() common.Status {
	if x != nil {
		return x.Status
	}
	return common.Status(0)
}

func (x *Rate) GetType() RateType {
	if x != nil {
		return x.Type
	}
	return RateType_STALL_RENTAL_RATE
}

func (x *Rate) GetOtherRate() *OtherRate {
	if x != nil {
		return x.OtherRate
	}
	return nil
}

func (x *Rate) GetRentalRate() *StallRentalRate {
	if x != nil {
		return x.RentalRate
	}
	return nil
}

func (x *Rate) GetRightsRate() *StallRightsRate {
	if x != nil {
		return x.RightsRate
	}
	return nil
}

func (x *Rate) GetSecurityBond() *StallSecurityBond {
	if x != nil {
		return x.SecurityBond
	}
	return nil
}

type OtherRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail OtherRateDetail `protobuf:"varint,1,opt,name=detail,proto3,enum=rental.OtherRateDetail" json:"detail"`
	Amount float64         `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount"`
}

func (x *OtherRate) Reset() {
	*x = OtherRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rental_rate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtherRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtherRate) ProtoMessage() {}

func (x *OtherRate) ProtoReflect() protoreflect.Message {
	mi := &file_rental_rate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtherRate.ProtoReflect.Descriptor instead.
func (*OtherRate) Descriptor() ([]byte, []int) {
	return file_rental_rate_proto_rawDescGZIP(), []int{1}
}

func (x *OtherRate) GetDetail() OtherRateDetail {
	if x != nil {
		return x.Detail
	}
	return OtherRateDetail_NEW_STALL_APPLICATION_FEE
}

func (x *OtherRate) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type StallRentalRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassRentalAmounts []*ClassAmountRate `protobuf:"bytes,5,rep,name=class_rental_amounts,json=classRentalAmounts,proto3" json:"class_rental_amounts"`
}

func (x *StallRentalRate) Reset() {
	*x = StallRentalRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rental_rate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StallRentalRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StallRentalRate) ProtoMessage() {}

func (x *StallRentalRate) ProtoReflect() protoreflect.Message {
	mi := &file_rental_rate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StallRentalRate.ProtoReflect.Descriptor instead.
func (*StallRentalRate) Descriptor() ([]byte, []int) {
	return file_rental_rate_proto_rawDescGZIP(), []int{2}
}

func (x *StallRentalRate) GetClassRentalAmounts() []*ClassAmountRate {
	if x != nil {
		return x.ClassRentalAmounts
	}
	return nil
}

type StallRightsRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassRightsAmounts []*ClassAmountRate `protobuf:"bytes,1,rep,name=class_rights_amounts,json=classRightsAmounts,proto3" json:"class_rights_amounts"`
}

func (x *StallRightsRate) Reset() {
	*x = StallRightsRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rental_rate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StallRightsRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StallRightsRate) ProtoMessage() {}

func (x *StallRightsRate) ProtoReflect() protoreflect.Message {
	mi := &file_rental_rate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StallRightsRate.ProtoReflect.Descriptor instead.
func (*StallRightsRate) Descriptor() ([]byte, []int) {
	return file_rental_rate_proto_rawDescGZIP(), []int{3}
}

func (x *StallRightsRate) GetClassRightsAmounts() []*ClassAmountRate {
	if x != nil {
		return x.ClassRightsAmounts
	}
	return nil
}

type ClassAmountRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clazz  market.MarketClass `protobuf:"varint,1,opt,name=clazz,proto3,enum=market.MarketClass" json:"clazz"`
	Amount float64            `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount"`
}

func (x *ClassAmountRate) Reset() {
	*x = ClassAmountRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rental_rate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassAmountRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassAmountRate) ProtoMessage() {}

func (x *ClassAmountRate) ProtoReflect() protoreflect.Message {
	mi := &file_rental_rate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassAmountRate.ProtoReflect.Descriptor instead.
func (*ClassAmountRate) Descriptor() ([]byte, []int) {
	return file_rental_rate_proto_rawDescGZIP(), []int{4}
}

func (x *ClassAmountRate) GetClazz() market.MarketClass {
	if x != nil {
		return x.Clazz
	}
	return market.MarketClass(0)
}

func (x *ClassAmountRate) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type StallSecurityBond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RentalFee float64 `protobuf:"fixed64,1,opt,name=rental_fee,json=rentalFee,proto3" json:"rental_fee"`
	Amount    float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount"`
}

func (x *StallSecurityBond) Reset() {
	*x = StallSecurityBond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rental_rate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StallSecurityBond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StallSecurityBond) ProtoMessage() {}

func (x *StallSecurityBond) ProtoReflect() protoreflect.Message {
	mi := &file_rental_rate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StallSecurityBond.ProtoReflect.Descriptor instead.
func (*StallSecurityBond) Descriptor() ([]byte, []int) {
	return file_rental_rate_proto_rawDescGZIP(), []int{5}
}

func (x *StallSecurityBond) GetRentalFee() float64 {
	if x != nil {
		return x.RentalFee
	}
	return 0
}

func (x *StallSecurityBond) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type ListRatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageRequest      *common.PageRequest `protobuf:"bytes,1,opt,name=page_request,json=pageRequest,proto3" json:"page_request"` // sort by code, type, detail
	Types            []RateType          `protobuf:"varint,2,rep,packed,name=types,proto3,enum=rental.RateType" json:"types"`
	OtherRateDetails []OtherRateDetail   `protobuf:"varint,3,rep,packed,name=other_rate_details,json=otherRateDetails,proto3,enum=rental.OtherRateDetail" json:"other_rate_details"`
}

func (x *ListRatesRequest) Reset() {
	*x = ListRatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rental_rate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRatesRequest) ProtoMessage() {}

func (x *ListRatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rental_rate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRatesRequest.ProtoReflect.Descriptor instead.
func (*ListRatesRequest) Descriptor() ([]byte, []int) {
	return file_rental_rate_proto_rawDescGZIP(), []int{6}
}

func (x *ListRatesRequest) GetPageRequest() *common.PageRequest {
	if x != nil {
		return x.PageRequest
	}
	return nil
}

func (x *ListRatesRequest) GetTypes() []RateType {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *ListRatesRequest) GetOtherRateDetails() []OtherRateDetail {
	if x != nil {
		return x.OtherRateDetails
	}
	return nil
}

type GetRateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RateCode string `protobuf:"bytes,1,opt,name=rate_code,json=rateCode,proto3" json:"rate_code"`
}

func (x *GetRateRequest) Reset() {
	*x = GetRateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rental_rate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRateRequest) ProtoMessage() {}

func (x *GetRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rental_rate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRateRequest.ProtoReflect.Descriptor instead.
func (*GetRateRequest) Descriptor() ([]byte, []int) {
	return file_rental_rate_proto_rawDescGZIP(), []int{7}
}

func (x *GetRateRequest) GetRateCode() string {
	if x != nil {
		return x.RateCode
	}
	return ""
}

type GetRateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success"`
	// Types that are assignable to Response:
	//	*GetRateResponse_Data_
	//	*GetRateResponse_Error
	Response isGetRateResponse_Response `protobuf_oneof:"response"`
}

func (x *GetRateResponse) Reset() {
	*x = GetRateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rental_rate_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRateResponse) ProtoMessage() {}

func (x *GetRateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rental_rate_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRateResponse.ProtoReflect.Descriptor instead.
func (*GetRateResponse) Descriptor() ([]byte, []int) {
	return file_rental_rate_proto_rawDescGZIP(), []int{8}
}

func (x *GetRateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (m *GetRateResponse) GetResponse() isGetRateResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetRateResponse) GetData() *GetRateResponse_Data {
	if x, ok := x.GetResponse().(*GetRateResponse_Data_); ok {
		return x.Data
	}
	return nil
}

func (x *GetRateResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*GetRateResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isGetRateResponse_Response interface {
	isGetRateResponse_Response()
}

type GetRateResponse_Data_ struct {
	Data *GetRateResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

type GetRateResponse_Error struct {
	Error *common.Error `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*GetRateResponse_Data_) isGetRateResponse_Response() {}

func (*GetRateResponse_Error) isGetRateResponse_Response() {}

type UpsertRateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RateCode *string       `protobuf:"bytes,1,opt,name=rate_code,json=rateCode,proto3,oneof" json:"rate_code"` // applied for update operation only
	RateId   *string       `protobuf:"bytes,2,opt,name=rate_id,json=rateId,proto3,oneof" json:"rate_id"`
	Status   common.Status `protobuf:"varint,3,opt,name=status,proto3,enum=common.Status" json:"status"`
	Type     RateType      `protobuf:"varint,4,opt,name=type,proto3,enum=rental.RateType" json:"type"`
	// only one of six next fields should be set
	OtherRate    *OtherRate         `protobuf:"bytes,5,opt,name=other_rate,json=otherRate,proto3" json:"other_rate"`
	RentalRate   *StallRentalRate   `protobuf:"bytes,6,opt,name=rental_rate,json=rentalRate,proto3" json:"rental_rate"`
	RightsRate   *StallRightsRate   `protobuf:"bytes,7,opt,name=rights_rate,json=rightsRate,proto3" json:"rights_rate"`
	SecurityBond *StallSecurityBond `protobuf:"bytes,8,opt,name=security_bond,json=securityBond,proto3" json:"security_bond"`
}

func (x *UpsertRateRequest) Reset() {
	*x = UpsertRateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rental_rate_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRateRequest) ProtoMessage() {}

func (x *UpsertRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rental_rate_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRateRequest.ProtoReflect.Descriptor instead.
func (*UpsertRateRequest) Descriptor() ([]byte, []int) {
	return file_rental_rate_proto_rawDescGZIP(), []int{9}
}

func (x *UpsertRateRequest) GetRateCode() string {
	if x != nil && x.RateCode != nil {
		return *x.RateCode
	}
	return ""
}

func (x *UpsertRateRequest) GetRateId() string {
	if x != nil && x.RateId != nil {
		return *x.RateId
	}
	return ""
}

func (x *UpsertRateRequest) GetStatus() common.Status {
	if x != nil {
		return x.Status
	}
	return common.Status(0)
}

func (x *UpsertRateRequest) GetType() RateType {
	if x != nil {
		return x.Type
	}
	return RateType_STALL_RENTAL_RATE
}

func (x *UpsertRateRequest) GetOtherRate() *OtherRate {
	if x != nil {
		return x.OtherRate
	}
	return nil
}

func (x *UpsertRateRequest) GetRentalRate() *StallRentalRate {
	if x != nil {
		return x.RentalRate
	}
	return nil
}

func (x *UpsertRateRequest) GetRightsRate() *StallRightsRate {
	if x != nil {
		return x.RightsRate
	}
	return nil
}

func (x *UpsertRateRequest) GetSecurityBond() *StallSecurityBond {
	if x != nil {
		return x.SecurityBond
	}
	return nil
}

type CalculateRateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationType ApplicationType    `protobuf:"varint,1,opt,name=application_type,json=applicationType,proto3,enum=rental.ApplicationType" json:"application_type"`
	MarketClass     market.MarketClass `protobuf:"varint,2,opt,name=market_class,json=marketClass,proto3,enum=market.MarketClass" json:"market_class"`
	StallClass      market.StallClass  `protobuf:"varint,3,opt,name=stall_class,json=stallClass,proto3,enum=market.StallClass" json:"stall_class"`
	StallType       market.StallType   `protobuf:"varint,4,opt,name=stall_type,json=stallType,proto3,enum=market.StallType" json:"stall_type"`
	StallSectionId  string             `protobuf:"bytes,5,opt,name=stall_section_id,json=stallSectionId,proto3" json:"stall_section_id"`
	StallArea       float64            `protobuf:"fixed64,6,opt,name=stall_area,json=stallArea,proto3" json:"stall_area"`
	ApplicationId   string             `protobuf:"bytes,7,opt,name=application_id,json=applicationId,proto3" json:"application_id"`
	Includes        []FeeType          `protobuf:"varint,8,rep,packed,name=includes,proto3,enum=rental.FeeType" json:"includes"`
}

func (x *CalculateRateRequest) Reset() {
	*x = CalculateRateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rental_rate_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateRateRequest) ProtoMessage() {}

func (x *CalculateRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rental_rate_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateRateRequest.ProtoReflect.Descriptor instead.
func (*CalculateRateRequest) Descriptor() ([]byte, []int) {
	return file_rental_rate_proto_rawDescGZIP(), []int{10}
}

func (x *CalculateRateRequest) GetApplicationType() ApplicationType {
	if x != nil {
		return x.ApplicationType
	}
	return ApplicationType_NEW_STALL_APP
}

func (x *CalculateRateRequest) GetMarketClass() market.MarketClass {
	if x != nil {
		return x.MarketClass
	}
	return market.MarketClass(0)
}

func (x *CalculateRateRequest) GetStallClass() market.StallClass {
	if x != nil {
		return x.StallClass
	}
	return market.StallClass(0)
}

func (x *CalculateRateRequest) GetStallType() market.StallType {
	if x != nil {
		return x.StallType
	}
	return market.StallType(0)
}

func (x *CalculateRateRequest) GetStallSectionId() string {
	if x != nil {
		return x.StallSectionId
	}
	return ""
}

func (x *CalculateRateRequest) GetStallArea() float64 {
	if x != nil {
		return x.StallArea
	}
	return 0
}

func (x *CalculateRateRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *CalculateRateRequest) GetIncludes() []FeeType {
	if x != nil {
		return x.Includes
	}
	return nil
}

type CalculateRateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success"`
	// Types that are assignable to Response:
	//	*CalculateRateResponse_Data_
	//	*CalculateRateResponse_Error
	Response isCalculateRateResponse_Response `protobuf_oneof:"response"`
}

func (x *CalculateRateResponse) Reset() {
	*x = CalculateRateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rental_rate_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateRateResponse) ProtoMessage() {}

func (x *CalculateRateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rental_rate_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateRateResponse.ProtoReflect.Descriptor instead.
func (*CalculateRateResponse) Descriptor() ([]byte, []int) {
	return file_rental_rate_proto_rawDescGZIP(), []int{11}
}

func (x *CalculateRateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (m *CalculateRateResponse) GetResponse() isCalculateRateResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CalculateRateResponse) GetData() *CalculateRateResponse_Data {
	if x, ok := x.GetResponse().(*CalculateRateResponse_Data_); ok {
		return x.Data
	}
	return nil
}

func (x *CalculateRateResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*CalculateRateResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isCalculateRateResponse_Response interface {
	isCalculateRateResponse_Response()
}

type CalculateRateResponse_Data_ struct {
	Data *CalculateRateResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

type CalculateRateResponse_Error struct {
	Error *common.Error `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*CalculateRateResponse_Data_) isCalculateRateResponse_Response() {}

func (*CalculateRateResponse_Error) isCalculateRateResponse_Response() {}

type GetRateResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rate *Rate `protobuf:"bytes,1,opt,name=rate,proto3" json:"rate"`
}

func (x *GetRateResponse_Data) Reset() {
	*x = GetRateResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rental_rate_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRateResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRateResponse_Data) ProtoMessage() {}

func (x *GetRateResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_rental_rate_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRateResponse_Data.ProtoReflect.Descriptor instead.
func (*GetRateResponse_Data) Descriptor() ([]byte, []int) {
	return file_rental_rate_proto_rawDescGZIP(), []int{8, 0}
}

func (x *GetRateResponse_Data) GetRate() *Rate {
	if x != nil {
		return x.Rate
	}
	return nil
}

type CalculateRateResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitialFee     float64 `protobuf:"fixed64,1,opt,name=initial_fee,json=initialFee,proto3" json:"initial_fee"`
	MonthlyFee     float64 `protobuf:"fixed64,2,opt,name=monthly_fee,json=monthlyFee,proto3" json:"monthly_fee"`
	SecurityFee    float64 `protobuf:"fixed64,3,opt,name=security_fee,json=securityFee,proto3" json:"security_fee"`
	TotalAmountDue float64 `protobuf:"fixed64,4,opt,name=total_amount_due,json=totalAmountDue,proto3" json:"total_amount_due"`
}

func (x *CalculateRateResponse_Data) Reset() {
	*x = CalculateRateResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rental_rate_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateRateResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateRateResponse_Data) ProtoMessage() {}

func (x *CalculateRateResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_rental_rate_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateRateResponse_Data.ProtoReflect.Descriptor instead.
func (*CalculateRateResponse_Data) Descriptor() ([]byte, []int) {
	return file_rental_rate_proto_rawDescGZIP(), []int{11, 0}
}

func (x *CalculateRateResponse_Data) GetInitialFee() float64 {
	if x != nil {
		return x.InitialFee
	}
	return 0
}

func (x *CalculateRateResponse_Data) GetMonthlyFee() float64 {
	if x != nil {
		return x.MonthlyFee
	}
	return 0
}

func (x *CalculateRateResponse_Data) GetSecurityFee() float64 {
	if x != nil {
		return x.SecurityFee
	}
	return 0
}

func (x *CalculateRateResponse_Data) GetTotalAmountDue() float64 {
	if x != nil {
		return x.TotalAmountDue
	}
	return 0
}

var File_rental_rate_proto protoreflect.FileDescriptor

var file_rental_rate_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x1a, 0x13, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2f,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0,
	0x02, 0x0a, 0x04, 0x52, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x52, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x52, 0x61,
	0x74, 0x65, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a,
	0x0b, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x6f,
	0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x2e, 0x53, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x42,
	0x6f, 0x6e, 0x64, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x42, 0x6f, 0x6e,
	0x64, 0x22, 0x54, 0x0a, 0x09, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2f,
	0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x52, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5c, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x14, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x52, 0x12, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x5c, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x14, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52,
	0x12, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x22, 0x54, 0x0a, 0x0f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x7a, 0x7a, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x7a,
	0x7a, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x11, 0x53, 0x74, 0x61,
	0x6c, 0x6c, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x42, 0x6f, 0x6e, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0c, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x12, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e,
	0x4f, 0x74, 0x68, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x10, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x2d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0xbc, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x32,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x28, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x20, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x52, 0x04, 0x72,
	0x61, 0x74, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xa1, 0x03, 0x0a, 0x11, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x72, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x72, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x72, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x52, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x52,
	0x61, 0x74, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x38, 0x0a, 0x0b, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x53, 0x74,
	0x61, 0x6c, 0x6c, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x6c, 0x6c, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x42, 0x6f, 0x6e, 0x64, 0x52, 0x0c, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x42, 0x6f, 0x6e, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x22, 0x96, 0x03, 0x0a, 0x14, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x10,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x36, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0b, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x6c, 0x6c, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x30, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x6c, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x41, 0x72, 0x65, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x2b, 0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x46, 0x65, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x22, 0xb6, 0x02, 0x0a,
	0x15, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0x95, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0a, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x46, 0x65, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x64, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x75, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x63, 0x0a, 0x07, 0x46, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x53, 0x41, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x5f,
	0x46, 0x45, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x53, 0x41, 0x5f, 0x4d, 0x4f, 0x4e,
	0x54, 0x48, 0x4c, 0x59, 0x5f, 0x46, 0x45, 0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x53,
	0x41, 0x5f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x46, 0x45, 0x45, 0x10, 0x02,
	0x12, 0x18, 0x0a, 0x14, 0x4e, 0x53, 0x41, 0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x5f, 0x41, 0x4d,
	0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x44, 0x55, 0x45, 0x10, 0x03, 0x32, 0xa9, 0x03, 0x0a, 0x0b, 0x52,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x55,
	0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x6e, 0x6c, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x72, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f,
	0x6e, 0x6c, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x42, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4e, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x31, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x72,
	0x73, 0x2e, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x50, 0x01, 0x5a, 0x1d, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2f, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_rental_rate_proto_rawDescOnce sync.Once
	file_rental_rate_proto_rawDescData = file_rental_rate_proto_rawDesc
)

func file_rental_rate_proto_rawDescGZIP() []byte {
	file_rental_rate_proto_rawDescOnce.Do(func() {
		file_rental_rate_proto_rawDescData = protoimpl.X.CompressGZIP(file_rental_rate_proto_rawDescData)
	})
	return file_rental_rate_proto_rawDescData
}

var file_rental_rate_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rental_rate_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_rental_rate_proto_goTypes = []interface{}{
	(FeeType)(0),                       // 0: rental.FeeType
	(*Rate)(nil),                       // 1: rental.Rate
	(*OtherRate)(nil),                  // 2: rental.OtherRate
	(*StallRentalRate)(nil),            // 3: rental.StallRentalRate
	(*StallRightsRate)(nil),            // 4: rental.StallRightsRate
	(*ClassAmountRate)(nil),            // 5: rental.ClassAmountRate
	(*StallSecurityBond)(nil),          // 6: rental.StallSecurityBond
	(*ListRatesRequest)(nil),           // 7: rental.ListRatesRequest
	(*GetRateRequest)(nil),             // 8: rental.GetRateRequest
	(*GetRateResponse)(nil),            // 9: rental.GetRateResponse
	(*UpsertRateRequest)(nil),          // 10: rental.UpsertRateRequest
	(*CalculateRateRequest)(nil),       // 11: rental.CalculateRateRequest
	(*CalculateRateResponse)(nil),      // 12: rental.CalculateRateResponse
	(*GetRateResponse_Data)(nil),       // 13: rental.GetRateResponse.Data
	(*CalculateRateResponse_Data)(nil), // 14: rental.CalculateRateResponse.Data
	(common.Status)(0),                 // 15: common.Status
	(RateType)(0),                      // 16: rental.RateType
	(OtherRateDetail)(0),               // 17: rental.OtherRateDetail
	(market.MarketClass)(0),            // 18: market.MarketClass
	(*common.PageRequest)(nil),         // 19: common.PageRequest
	(*common.Error)(nil),               // 20: common.Error
	(ApplicationType)(0),               // 21: rental.ApplicationType
	(market.StallClass)(0),             // 22: market.StallClass
	(market.StallType)(0),              // 23: market.StallType
	(*common.FindByIdRequest)(nil),     // 24: common.FindByIdRequest
	(*common.PageResponse)(nil),        // 25: common.PageResponse
	(*common.OnlyCodeResponse)(nil),    // 26: common.OnlyCodeResponse
	(*common.NoContentResponse)(nil),   // 27: common.NoContentResponse
}
var file_rental_rate_proto_depIdxs = []int32{
	15, // 0: rental.Rate.status:type_name -> common.Status
	16, // 1: rental.Rate.type:type_name -> rental.RateType
	2,  // 2: rental.Rate.other_rate:type_name -> rental.OtherRate
	3,  // 3: rental.Rate.rental_rate:type_name -> rental.StallRentalRate
	4,  // 4: rental.Rate.rights_rate:type_name -> rental.StallRightsRate
	6,  // 5: rental.Rate.security_bond:type_name -> rental.StallSecurityBond
	17, // 6: rental.OtherRate.detail:type_name -> rental.OtherRateDetail
	5,  // 7: rental.StallRentalRate.class_rental_amounts:type_name -> rental.ClassAmountRate
	5,  // 8: rental.StallRightsRate.class_rights_amounts:type_name -> rental.ClassAmountRate
	18, // 9: rental.ClassAmountRate.clazz:type_name -> market.MarketClass
	19, // 10: rental.ListRatesRequest.page_request:type_name -> common.PageRequest
	16, // 11: rental.ListRatesRequest.types:type_name -> rental.RateType
	17, // 12: rental.ListRatesRequest.other_rate_details:type_name -> rental.OtherRateDetail
	13, // 13: rental.GetRateResponse.data:type_name -> rental.GetRateResponse.Data
	20, // 14: rental.GetRateResponse.error:type_name -> common.Error
	15, // 15: rental.UpsertRateRequest.status:type_name -> common.Status
	16, // 16: rental.UpsertRateRequest.type:type_name -> rental.RateType
	2,  // 17: rental.UpsertRateRequest.other_rate:type_name -> rental.OtherRate
	3,  // 18: rental.UpsertRateRequest.rental_rate:type_name -> rental.StallRentalRate
	4,  // 19: rental.UpsertRateRequest.rights_rate:type_name -> rental.StallRightsRate
	6,  // 20: rental.UpsertRateRequest.security_bond:type_name -> rental.StallSecurityBond
	21, // 21: rental.CalculateRateRequest.application_type:type_name -> rental.ApplicationType
	18, // 22: rental.CalculateRateRequest.market_class:type_name -> market.MarketClass
	22, // 23: rental.CalculateRateRequest.stall_class:type_name -> market.StallClass
	23, // 24: rental.CalculateRateRequest.stall_type:type_name -> market.StallType
	0,  // 25: rental.CalculateRateRequest.includes:type_name -> rental.FeeType
	14, // 26: rental.CalculateRateResponse.data:type_name -> rental.CalculateRateResponse.Data
	20, // 27: rental.CalculateRateResponse.error:type_name -> common.Error
	1,  // 28: rental.GetRateResponse.Data.rate:type_name -> rental.Rate
	7,  // 29: rental.RateService.ListRates:input_type -> rental.ListRatesRequest
	8,  // 30: rental.RateService.GetRate:input_type -> rental.GetRateRequest
	10, // 31: rental.RateService.CreateRate:input_type -> rental.UpsertRateRequest
	10, // 32: rental.RateService.UpdateRate:input_type -> rental.UpsertRateRequest
	24, // 33: rental.RateService.DeleteRate:input_type -> common.FindByIdRequest
	11, // 34: rental.RateService.CalculateRates:input_type -> rental.CalculateRateRequest
	25, // 35: rental.RateService.ListRates:output_type -> common.PageResponse
	9,  // 36: rental.RateService.GetRate:output_type -> rental.GetRateResponse
	26, // 37: rental.RateService.CreateRate:output_type -> common.OnlyCodeResponse
	26, // 38: rental.RateService.UpdateRate:output_type -> common.OnlyCodeResponse
	27, // 39: rental.RateService.DeleteRate:output_type -> common.NoContentResponse
	12, // 40: rental.RateService.CalculateRates:output_type -> rental.CalculateRateResponse
	35, // [35:41] is the sub-list for method output_type
	29, // [29:35] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_rental_rate_proto_init() }
func file_rental_rate_proto_init() {
	if File_rental_rate_proto != nil {
		return
	}
	file_rental_constant_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_rental_rate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rental_rate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtherRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rental_rate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StallRentalRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rental_rate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StallRightsRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rental_rate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassAmountRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rental_rate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StallSecurityBond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rental_rate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rental_rate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rental_rate_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rental_rate_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertRateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rental_rate_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateRateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rental_rate_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateRateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rental_rate_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRateResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rental_rate_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateRateResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rental_rate_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*GetRateResponse_Data_)(nil),
		(*GetRateResponse_Error)(nil),
	}
	file_rental_rate_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_rental_rate_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*CalculateRateResponse_Data_)(nil),
		(*CalculateRateResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rental_rate_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rental_rate_proto_goTypes,
		DependencyIndexes: file_rental_rate_proto_depIdxs,
		EnumInfos:         file_rental_rate_proto_enumTypes,
		MessageInfos:      file_rental_rate_proto_msgTypes,
	}.Build()
	File_rental_rate_proto = out.File
	file_rental_rate_proto_rawDesc = nil
	file_rental_rate_proto_goTypes = nil
	file_rental_rate_proto_depIdxs = nil
}
